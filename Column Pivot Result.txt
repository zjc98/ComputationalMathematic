import numpy as np

def swap(a, b, k, n):           # 找到主元并交换，这仅是一个仅用来交换的函数
    ans = 0
    for i in range(k, n):
        if ans < np.fabs(a[i][k]):    #fabs是绝对值，将a中绝对值最大的找出来
            ans = a[i][k]
            maxn = i
    a[[k, maxn], :] = a[[maxn, k], :]     #交换
    b[k], b[maxn] = b[maxn], b[k]

#主算法
def gaussin(a, b):
    cout = 0                         #定义计算次数
    m, n = a.shape                  #矩阵a的行数和列数
    if ( m < n ):
        print("There is a 解空间。")#保证方程个数大于未知数个数
    else:
        l = np.zeros((n,n))
        for i in range(n):
            # 限制条件
            if (a[i][i] == 0):
                print("no answer")
        # j表示列
        for k in range(n - 1):          # k表示第一层循环，(0，n-1)行
            swap(a, b, k, n)            #在每次计算前，找到最大主元，进行换行
            for i in range(k + 1, n):   # i表示第二层循环,(k+1,n)行,计算该行消元的系数
                l[i][k] = a[i][k] / a[k][k]     #计算
                cout += 1
                for j in range(m):      # j表示列，对每一列进行运算
                    a[i][j] = a[i][j] - l[i][k] * a[k][j]
                    cout += 1
                b[i] = b[i] - l[i][k] * b[k]
        # 回代求出方程解
        x = np.zeros(n)
        x[n - 1] = b[n - 1] / a[n - 1][n - 1] #先算最后一位的x解

        for i in range(n - 2, -1, -1):      #依次回代倒着算每一个解
            for j in range(i + 1, n):
                b[i] -= a[i][j] * x[j]
                               #自增自减
            x[i] = b[i] / a[i][i]
        for i in range(n):
            print("x" + str(i + 1) + " = ", x[i])
        print("x" " = ", x)
        print("计算次数","=",cout)


if __name__ == '__main__':      #当模块被直接运行时，以下代码块将被运行，当模块是被导入时，代码块不被运行。
    a = np.loadtxt('C:/Users/fanqi/Downloads/A.txt')
    b = np.loadtxt('C:/Users/fanqi/Downloads/b.txt')
    gaussin(a, b)



x1 =  0.0067379469990837895
x2 =  0.008147291719381267
x3 =  0.009812340505482482
x4 =  0.011770839864151415
x5 =  0.014064349287716292
x6 =  0.016738289099673717
x7 =  0.019841916330975526
x8 =  0.02342821555674865
x9 =  0.027553691670923156
x10 =  0.0322780520666357
x11 =  0.037663766684610744
x12 =  0.04377549594122941
x13 =  0.050679378689804544
x14 =  0.05844217512167296
x15 =  0.06713026287510299
x16 =  0.07680848856138939
x17 =  0.0875388813826028
x18 =  0.09937924041836846
x19 =  0.1123816123837536
x20 =  0.12659068206159724
x21 =  0.14204210301841386
x22 =  0.15876080142857368
x23 =  0.17675929064496748
x24 =  0.19603603834402855
x25 =  0.21657393141560077
x26 =  0.23833888604862852
x27 =  0.2612786514852098
x28 =  0.2853218555102611
x29 =  0.31037733778282695
x30 =  0.33633381351726155
x31 =  0.3630599047637312
x32 =  0.39040456965577763
x33 =  0.41819795159229034
x34 =  0.4462526605735565
x35 =  0.4743654880526851
x36 =  0.5023195449912607
x37 =  0.5298868006699693
x38 =  0.5568309875901789
x39 =  0.5829108259269802
x40 =  0.6078835098850606
x41 =  0.6315083883870971
x42 =  0.6535507641874538
x43 =  0.6737857291078899
x44 =  0.6920019489349967
x45 =  0.7080053098270231
x46 =  0.7216223389921959
x47 =  0.7327033159702219
x48 =  0.7411249970244578
x49 =  0.7467928837870708
x50 =  0.7496429781519163
x51 =  0.7496429781519167
x52 =  0.7467928837870721
x53 =  0.7411249970244598
x54 =  0.7327033159702245
x55 =  0.7216223389921992
x56 =  0.7080053098270274
x57 =  0.6920019489350013
x58 =  0.6737857291078955
x59 =  0.6535507641874598
x60 =  0.6315083883871033
x61 =  0.6078835098850672
x62 =  0.5829108259269871
x63 =  0.5568309875901862
x64 =  0.5298868006699766
x65 =  0.5023195449912681
x66 =  0.4743654880526926
x67 =  0.4462526605735638
x68 =  0.4181979515922977
x69 =  0.3904045696557847
x70 =  0.36305990476373834
x71 =  0.33633381351726827
x72 =  0.31037733778283333
x73 =  0.2853218555102674
x74 =  0.2612786514852156
x75 =  0.23833888604863424
x76 =  0.2165739314156061
x77 =  0.1960360383440336
x78 =  0.1767592906449726
x79 =  0.15876080142857846
x80 =  0.14204210301841846
x81 =  0.12659068206160162
x82 =  0.11238161238375799
x83 =  0.09937924041837262
x84 =  0.08753888138260682
x85 =  0.07680848856139338
x86 =  0.0671302628751067
x87 =  0.05844217512167659
x88 =  0.05067937868980796
x89 =  0.04377549594123272
x90 =  0.03766376668461388
x91 =  0.03227805206663872
x92 =  0.027553691670926066
x93 =  0.02342821555675141
x94 =  0.01984191633097818
x95 =  0.01673828909967623
x96 =  0.014064349287718683
x97 =  0.01177083986415368
x98 =  0.009812340505484591
x99 =  0.008147291719383252
x100 =  0.006737946999085641
x =  [0.00673795 0.00814729 0.00981234 0.01177084 0.01406435 0.01673829
 0.01984192 0.02342822 0.02755369 0.03227805 0.03766377 0.0437755
 0.05067938 0.05844218 0.06713026 0.07680849 0.08753888 0.09937924
 0.11238161 0.12659068 0.1420421  0.1587608  0.17675929 0.19603604
 0.21657393 0.23833889 0.26127865 0.28532186 0.31037734 0.33633381
 0.3630599  0.39040457 0.41819795 0.44625266 0.47436549 0.50231954
 0.5298868  0.55683099 0.58291083 0.60788351 0.63150839 0.65355076
 0.67378573 0.69200195 0.70800531 0.72162234 0.73270332 0.741125
 0.74679288 0.74964298 0.74964298 0.74679288 0.741125   0.73270332
 0.72162234 0.70800531 0.69200195 0.67378573 0.65355076 0.63150839
 0.60788351 0.58291083 0.55683099 0.5298868  0.50231954 0.47436549
 0.44625266 0.41819795 0.39040457 0.3630599  0.33633381 0.31037734
 0.28532186 0.26127865 0.23833889 0.21657393 0.19603604 0.17675929
 0.1587608  0.1420421  0.12659068 0.11238161 0.09937924 0.08753888
 0.07680849 0.06713026 0.05844218 0.05067938 0.0437755  0.03766377
 0.03227805 0.02755369 0.02342822 0.01984192 0.01673829 0.01406435
 0.01177084 0.00981234 0.00814729 0.00673795]
计算次数 = 499950
